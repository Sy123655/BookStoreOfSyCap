{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDeleteReducer, orderDeliverReducer, orderDetailsReducer, orderListReducer, orderMineListReducer, orderPayReducer, orderSummaryReducer } from './reducers/orderReducers';\nimport { productCategoryListReducer, productCreateReducer, productDeleteReducer, productDetailsReducer, productListReducer, productReviewCreateReducer, productUpdateReducer } from './reducers/productReducers';\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userRegisterReducer, userSigninReducer, userTopSellerListReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducers';\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'Paypal'\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  orderList: orderListReducer,\n  orderDelete: orderDeleteReducer,\n  orderDeliver: orderDeliverReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userTopSellersList: userTopSellerListReducer,\n  productCategoryList: productCategoryListReducer,\n  productReviewCreate: productReviewCreateReducer,\n  orderSummary: orderSummaryReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSTION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["D:/document/Final-Project/BookStore-app-main/frontend/src/store.js"],"names":["applyMiddleware","combineReducers","compose","createStore","thunk","cartReducer","orderCreateReducer","orderDeleteReducer","orderDeliverReducer","orderDetailsReducer","orderListReducer","orderMineListReducer","orderPayReducer","orderSummaryReducer","productCategoryListReducer","productCreateReducer","productDeleteReducer","productDetailsReducer","productListReducer","productReviewCreateReducer","productUpdateReducer","userDeleteReducer","userDetailsReducer","userListReducer","userRegisterReducer","userSigninReducer","userTopSellerListReducer","userUpdateProfileReducer","userUpdateReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","paymentMethod","reducer","productList","productDetails","userRegister","orderCreate","orderDetails","orderPay","orderMineList","userDetails","userUpdateProfile","productCreate","productUpdate","productDelete","orderList","orderDelete","orderDeliver","userList","userDelete","userUpdate","userTopSellersList","productCategoryList","productReviewCreate","orderSummary","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSTION_COMPOSE__","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAApD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,mBAAjD,EAAsEC,mBAAtE,EAA2FC,gBAA3F,EAA6GC,oBAA7G,EAAmIC,eAAnI,EAAoJC,mBAApJ,QAA+K,0BAA/K;AACA,SAASC,0BAAT,EAAqCC,oBAArC,EAA2DC,oBAA3D,EAAiFC,qBAAjF,EAAwGC,kBAAxG,EAA4HC,0BAA5H,EAAwJC,oBAAxJ,QAAoL,4BAApL;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,EAAgDC,eAAhD,EAAiEC,mBAAjE,EAAsFC,iBAAtF,EAAyGC,wBAAzG,EAAmIC,wBAAnI,EAA6JC,iBAA7J,QAAsL,yBAAtL;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADQ,GAER;AAHM,GADK;AAMjBG,EAAAA,IAAI,EAAC;AACDC,IAAAA,SAAS,EAAEL,YAAY,CAACC,OAAb,CAAqB,WAArB,IACTC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADS,GAET,EAHD;AAIDK,IAAAA,eAAe,EAAEN,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACfC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADe,GAEf,EAND;AAODM,IAAAA,aAAa,EAAE;AAPd;AANY,CAArB;AAgBA,MAAMC,OAAO,GAAGvC,eAAe,CAAC;AAC5BwC,EAAAA,WAAW,EAAGvB,kBADc;AAE5BwB,EAAAA,cAAc,EAAEzB,qBAFY;AAG5BmB,EAAAA,IAAI,EAAE/B,WAHsB;AAI5ByB,EAAAA,UAAU,EAAEL,iBAJgB;AAK5BkB,EAAAA,YAAY,EAAEnB,mBALc;AAM5BoB,EAAAA,WAAW,EAAEtC,kBANe;AAO5BuC,EAAAA,YAAY,EAAEpC,mBAPc;AAQ5BqC,EAAAA,QAAQ,EAAElC,eARkB;AAS5BmC,EAAAA,aAAa,EAAEpC,oBATa;AAU5BqC,EAAAA,WAAW,EAAE1B,kBAVe;AAW5B2B,EAAAA,iBAAiB,EAAEtB,wBAXS;AAY5BuB,EAAAA,aAAa,EAAGnC,oBAZY;AAa5BoC,EAAAA,aAAa,EAAE/B,oBAba;AAc5BgC,EAAAA,aAAa,EAAEpC,oBAda;AAe5BqC,EAAAA,SAAS,EAAE3C,gBAfiB;AAgB5B4C,EAAAA,WAAW,EAAE/C,kBAhBe;AAiB5BgD,EAAAA,YAAY,EAAE/C,mBAjBc;AAkB5BgD,EAAAA,QAAQ,EAAEjC,eAlBkB;AAmB5BkC,EAAAA,UAAU,EAAEpC,iBAnBgB;AAoB5BqC,EAAAA,UAAU,EAAE9B,iBApBgB;AAqB5B+B,EAAAA,kBAAkB,EAAEjC,wBArBQ;AAsB5BkC,EAAAA,mBAAmB,EAAE9C,0BAtBO;AAuB5B+C,EAAAA,mBAAmB,EAAE1C,0BAvBO;AAwB5B2C,EAAAA,YAAY,EAAEjD;AAxBc,CAAD,CAA/B;AA0BA,MAAMkD,eAAe,GAAGC,MAAM,CAACC,qCAAP,IAAgD/D,OAAxE;AACA,MAAMgE,KAAK,GAAG/D,WAAW,CACrBqC,OADqB,EAErBX,YAFqB,EAGrBkC,eAAe,CAAC/D,eAAe,CAACI,KAAD,CAAhB,CAHM,CAAzB;AAKA,eAAe8D,KAAf","sourcesContent":["import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDeleteReducer, orderDeliverReducer, orderDetailsReducer, orderListReducer, orderMineListReducer, orderPayReducer, orderSummaryReducer } from './reducers/orderReducers';\nimport { productCategoryListReducer, productCreateReducer, productDeleteReducer, productDetailsReducer, productListReducer, productReviewCreateReducer, productUpdateReducer } from './reducers/productReducers';\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userRegisterReducer, userSigninReducer, userTopSellerListReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducers';\n\nconst initialState = {\n    userSignin: {\n        userInfo: localStorage.getItem('userInfo')\n        ? JSON.parse(localStorage.getItem('userInfo'))\n        : null,\n    },\n    cart:{\n        cartItems: localStorage.getItem('cartItems')\n        ? JSON.parse(localStorage.getItem('cartItems'))\n        : [],\n        shippingAddress: localStorage.getItem('shippingAddress')\n        ? JSON.parse(localStorage.getItem('shippingAddress'))\n        : {},\n        paymentMethod: 'Paypal',\n    },\n};\nconst reducer = combineReducers({\n    productList : productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userSignin: userSigninReducer,\n    userRegister: userRegisterReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderMineList: orderMineListReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    productCreate : productCreateReducer, \n    productUpdate: productUpdateReducer,\n    productDelete: productDeleteReducer,\n    orderList: orderListReducer,\n    orderDelete: orderDeleteReducer,\n    orderDeliver: orderDeliverReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    userTopSellersList: userTopSellerListReducer,\n    productCategoryList: productCategoryListReducer,\n    productReviewCreate: productReviewCreateReducer,\n    orderSummary: orderSummaryReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSTION_COMPOSE__ || compose;\nconst store = createStore(\n    reducer,\n    initialState,\n    composeEnhancer(applyMiddleware(thunk)));\n\nexport default store;"]},"metadata":{},"sourceType":"module"}