{"ast":null,"code":"var _jsxFileName = \"E:\\\\A_T\\xE0i Li\\u1EC7u H\\u1ECDc T\\u1EADp_A\\\\TOP_UP\\\\BookStore\\\\frontend\\\\src\\\\screens\\\\OrderListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteOrder, listOrders } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_DELETE_RESET } from '../constants/orderConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrderListScreen(props) {\n  _s();\n\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading,\n    error,\n    orders\n  } = orderList;\n  const orderDelete = useSelector(state => state.orderDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = orderDelete;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listOrders());\n    dispatch({\n      type: ORDER_DELETE_RESET\n    });\n  }, [dispatch, successDelete]);\n\n  const deleteHandler = order => {\n    if (window.confirm('Are you sure to delete')) {\n      dispatch(deleteOrder(order._id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), loadingDelete && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 31\n      }, this), errorDelete && /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: errorDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"USER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TOTAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PAID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DELIVERED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ACTION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", order.totalPrice.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isPaid ? order.paidAt.substring(0, 10) : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isDelivered ? order.deliveredAt.substring(0, 10) : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"small\",\n                onClick: () => {\n                  props.history.push(`/order/${order._id}`);\n                },\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"small\",\n                onClick: () => deleteHandler(order),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderListScreen, \"MnkrgBnhA5U1xVd7+iGP6WKOzGw=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = OrderListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderListScreen\");","map":{"version":3,"sources":["E:/A_Tài Liệu Học Tập_A/TOP_UP/BookStore/frontend/src/screens/OrderListScreen.js"],"names":["React","useEffect","useDispatch","useSelector","deleteOrder","listOrders","LoadingBox","MessageBox","ORDER_DELETE_RESET","OrderListScreen","props","orderList","state","loading","error","orders","orderDelete","loadingDelete","errorDelete","success","successDelete","dispatch","type","deleteHandler","order","window","confirm","_id","map","name","createdAt","totalPrice","toFixed","isPaid","paidAt","substring","isDelivered","deliveredAt","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,yBAAxC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,kBAAT,QAAmC,6BAAnC;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAAA;;AAC1C,QAAMC,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA6BJ,SAAnC;AACA,QAAMK,WAAW,GAAGb,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACI,WAAlB,CAA/B;AACA,QAAM;AACFH,IAAAA,OAAO,EAAEI,aADP;AAEFH,IAAAA,KAAK,EAAEI,WAFL;AAGFC,IAAAA,OAAO,EAAEC;AAHP,MAIFJ,WAJJ;AAKA,QAAMK,QAAQ,GAAGnB,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAK;AACXoB,IAAAA,QAAQ,CAAChB,UAAU,EAAX,CAAR;AACAgB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEd;AAAP,KAAD,CAAR;AACH,GAHQ,EAGN,CAACa,QAAD,EAAWD,aAAX,CAHM,CAAT;;AAIA,QAAMG,aAAa,GAAIC,KAAD,IAAU;AAC5B,QAAGC,MAAM,CAACC,OAAP,CAAe,wBAAf,CAAH,EAA6C;AACzCL,MAAAA,QAAQ,CAACjB,WAAW,CAACoB,KAAK,CAACG,GAAP,CAAZ,CAAR;AACH;AACJ,GAJD;;AAKA,sBACI;AAAA,2BACI;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAECV,aAAa,iBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAFlB,EAGCC,WAAW,iBAAI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,QAApB;AAAA,kBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAHhB,EAICL,OAAO,gBAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAAF,GACRC,KAAK,gBAAE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,QAApB;AAAA,kBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAAF,gBAGD;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI;AAAA,oBACKC,MAAM,CAACa,GAAP,CAAYJ,KAAD,iBACR;AAAA,oCACI;AAAA,wBAAKA,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKH,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAKL,KAAK,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,8BAAMN,KAAK,CAACO,UAAN,CAAiBC,OAAjB,CAAyB,CAAzB,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA,wBAAKR,KAAK,CAACS,MAAN,GAAcT,KAAK,CAACU,MAAN,CAAaC,SAAb,CAAuB,CAAvB,EAA0B,EAA1B,CAAd,GAA8C;AAAnD;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA,wBAAKX,KAAK,CAACY,WAAN,GACHZ,KAAK,CAACa,WAAN,CAAkBF,SAAlB,CAA4B,CAA5B,EAA+B,EAA/B,CADG,GAEH;AAFF;AAAA;AAAA;AAAA;AAAA,oBANJ,eAUI;AAAA,sCACI;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,SAAS,EAAC,OAAhC;AACI,gBAAA,OAAO,EAAE,MAAM;AAACzB,kBAAAA,KAAK,CAAC4B,OAAN,CAAcC,IAAd,CAAoB,UAASf,KAAK,CAACG,GAAI,EAAvC;AAA0C,iBAD9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAKI;AACI,gBAAA,IAAI,EAAC,QADT;AAEI,gBAAA,SAAS,EAAC,OAFd;AAGI,gBAAA,OAAO,EAAE,MAAKJ,aAAa,CAACC,KAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA,aAASA,KAAK,CAACG,GAAf;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuDH;;GA1EuBlB,e;UACFN,W,EAEEA,W,EAMHD,W;;;KATGO,e","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteOrder, listOrders } from '../actions/orderActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { ORDER_DELETE_RESET } from '../constants/orderConstants';\r\n\r\nexport default function OrderListScreen(props){\r\n    const orderList = useSelector((state) => state.orderList);\r\n    const { loading, error, orders } = orderList;\r\n    const orderDelete = useSelector((state) => state.orderDelete);\r\n    const { \r\n        loading: loadingDelete, \r\n        error: errorDelete, \r\n        success: successDelete\r\n    } = orderDelete;\r\n    const dispatch = useDispatch();\r\n    useEffect(() =>{\r\n        dispatch(listOrders());\r\n        dispatch({type: ORDER_DELETE_RESET});\r\n    }, [dispatch, successDelete]);\r\n    const deleteHandler = (order) =>{\r\n        if(window.confirm('Are you sure to delete')) {\r\n            dispatch(deleteOrder(order._id));\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n            <h1>Orders</h1>\r\n            {loadingDelete && <LoadingBox></LoadingBox>}\r\n            {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\r\n            {loading? <LoadingBox></LoadingBox>:\r\n            error? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            :\r\n            (\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th>ACTION</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map((order) =>(\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.name}</td>\r\n                                <td>{order.createdAt}</td>\r\n                                <td>${order.totalPrice.toFixed(2)}</td>\r\n                                <td>{order.isPaid? order.paidAt.substring(0, 10) : 'No'}</td>\r\n                                <td>{order.isDelivered\r\n                                ? order.deliveredAt.substring(0, 10)\r\n                                : 'No'}\r\n                                </td>\r\n                                <td>\r\n                                    <button type=\"button\" className=\"small\"\r\n                                        onClick={() => {props.history.push(`/order/${order._id}`)}}>\r\n                                            Details\r\n                                    </button>\r\n                                    <button \r\n                                        type=\"button\"\r\n                                        className=\"small\"\r\n                                        onClick={() =>deleteHandler(order)}\r\n                                    >Delete</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )\r\n            \r\n            }\r\n        </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}