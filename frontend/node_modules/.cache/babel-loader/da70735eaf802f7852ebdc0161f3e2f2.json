{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_FAIL } from \"../constants/productConstants\";\nexport const listProducts = ({\n  seller = '',\n  name = '',\n  category = '',\n  order = '',\n  min = 0,\n  max = 0,\n  rating = 0\n}) => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products?seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const listProductCategories = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/categories`);\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/BookStore-app-main/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_SUCCESS","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_CATEGORY_LIST_REQUEST","PRODUCT_CATEGORY_LIST_SUCCESS","PRODUCT_CATEGORY_LIST_FAIL","listProducts","seller","name","category","order","min","max","rating","dispatch","type","data","get","payload","error","message","listProductCategories","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct","delete"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport { \n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_DETAILS_FAIL, \n    PRODUCT_DETAILS_REQUEST, \n    PRODUCT_DETAILS_SUCCESS, \n    PRODUCT_LIST_FAIL, \n    PRODUCT_LIST_REQUEST, \n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_CATEGORY_LIST_REQUEST,\n    PRODUCT_CATEGORY_LIST_SUCCESS,\n    PRODUCT_CATEGORY_LIST_FAIL\n } from \"../constants/productConstants\";\n\nexport const listProducts = ({ \n    seller = '', \n    name= '', \n    category ='', \n    order = '',\n    min = 0,\n    max = 0,\n    rating = 0, }) => async (dispatch) => {\n    dispatch({\n        type: PRODUCT_LIST_REQUEST,\n    });\n    try {\n        const { data } = await Axios.get(`/api/products?seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n    } catch(error) {\n        dispatch({ type:PRODUCT_LIST_FAIL, payload: error.message });\n    }\n};\n\nexport const listProductCategories = () => async (dispatch) => {\n    dispatch({\n        type: PRODUCT_CATEGORY_LIST_REQUEST,\n    });\n    try {\n        const { data } = await Axios.get(`/api/products/categories`);\n        dispatch({type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data});\n    } catch(error) {\n        dispatch({ type:PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\n    }\n};\n\nexport const detailsProduct = (productId) => async(dispatch) => {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n    try{\n        const {data} = await Axios.get(`/api/products/${productId}`);\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n    }catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\nexport const createProduct = () => async (dispatch, getState) =>{\n    dispatch({ type: PRODUCT_CREATE_REQUEST});\n    const { userSignin: { userInfo }} = getState();\n    try{\n        const { data } = await Axios.post('/api/products', {}, {\n            headers: { Authorization: `Bearer ${userInfo.token}`}\n        });\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data.product,\n        })\n    } catch(error){\n        const message =\n            error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({ type: PRODUCT_CREATE_FAIL, payload: message});\n    }\n};\n\nexport const updateProduct = (product) => async(dispatch, getState) =>{\n    dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\n    const { userSignin: { userInfo }} = getState();\n    try{\n        const { data } = await Axios.put(`/api/products/${product._id}`, product,{\n            headers: { Authorization: `Bearer ${userInfo.token}`},\n        });\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data})\n    } catch(error) {\n        const message =\n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({ type: PRODUCT_UPDATE_FAIL, error: message})\n    }\n};\n\nexport const deleteProduct = (productId) => async(dispatch, getState) =>{\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\n    const { userSignin: { userInfo }} = getState();\n    try{\n        const { data } = await Axios.delete(`/api/products/${productId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}`},\n        });\n        dispatch({ type: PRODUCT_DELETE_SUCCESS});\n    } catch(error) {\n        const message =\n        error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message;\n        dispatch({ type: PRODUCT_DELETE_FAIL, payload: message})\n    }\n};\n"]},"metadata":{},"sourceType":"module"}