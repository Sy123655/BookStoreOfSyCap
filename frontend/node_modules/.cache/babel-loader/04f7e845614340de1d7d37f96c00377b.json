{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_DETAILS_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_SUCCESS } from \"../constants/userConstants\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["E:/A_Tài Liệu Học Tập_A/TOP_UP/BookStore/frontend/src/actions/userActions.js"],"names":["Axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_DETAILS_REQUEST","USER_DETAILS_FAIL","USER_DETAILS_SUCCESS","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","register","name","signout","removeItem","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport { USER_REGISTER_FAIL, \r\n        USER_REGISTER_REQUEST, \r\n        USER_REGISTER_SUCCESS, \r\n        USER_SIGNIN_FAIL, \r\n        USER_SIGNIN_REQUEST, \r\n        USER_SIGNIN_SUCCESS, \r\n        USER_SIGNOUT,\r\n        USER_DETAILS_REQUEST,\r\n        USER_DETAILS_FAIL,\r\n        USER_DETAILS_SUCCESS\r\n     } from \"../constants/userConstants\"\r\n\r\nexport const signin = (email, password) => async(dispatch) =>{\r\n    dispatch({ type: USER_SIGNIN_REQUEST, payload:  { email, password } });\r\n    try {\r\n        const { data } = await Axios.post('/api/users/signin', {email, password});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGNIN_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const register = (name, email, password) => async(dispatch) =>{\r\n    dispatch({ type: USER_REGISTER_REQUEST, payload:  { email, password } });\r\n    try {\r\n        const { data } = await Axios.post('/api/users/register', { name, email, password});\r\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data });\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const signout = () => (dispatch) =>{\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress');\r\n    dispatch({ type: USER_SIGNOUT});\r\n};\r\n\r\nexport const detailsUser = (userId) => async(dispatch, getState) =>{\r\n    dispatch({ type: USER_DETAILS_REQUEST, payload: userId});\r\n    const { userSignin:{ userInfo }} = getState();\r\n    try{\r\n        const { data } = await Axios.get(`/api/users/${userId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data})\r\n    } catch(error){\r\n        const message =\r\n        error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: USER_DETAILS_FAIL, payload: message});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}