{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const exisItem = state.cartItems.find(x => x.product === item.product);\n\n      if (exisItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === exisItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["E:/A_Tài Liệu Học Tập_A/TOP_UP/BookStore/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","exisItem","find","x","product","map","filter"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,4BAAhD;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAC;AAAZ,CAAT,EAA0BC,MAA1B,KAAoC;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,aAAL;AACI,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,QAAQ,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAjB;;AACA,UAAGH,QAAH,EAAY;AACR,eAAM,EACF,GAAGN,KADD;AAEFC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcH,QAAQ,CAACG,OAAvB,GAAgCL,IAAhC,GAAsCI,CAAhE;AAFT,SAAN;AAKH,OAND,MAMO;AACH,eAAO,EAAC,GAAGR,KAAJ;AAAWC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAtB,SAAP;AACH;;AACL,SAAKN,gBAAL;AACI,aAAO,EAAE,GAAGE,KAAL;AACCC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAwBH,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAlD;AADZ,OAAP;;AAGJ;AACI,aAAOL,KAAP;AAlBR;AAoBH,CArBM","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (state = { cartItems:[]}, action) =>{\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const exisItem = state.cartItems.find(x => x.product === item.product);\r\n            if(exisItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map( x => x.product === exisItem.product? item: x\r\n                        ),\r\n                }\r\n            } else {\r\n                return {...state, cartItems: [...state.cartItems, item]}\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return { ...state, \r\n                    cartItems: state.cartItems.filter( x => x.product !== action.payload),\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}